:py:mod:`dasf.ml.mixture.gmm`
=============================

.. py:module:: dasf.ml.mixture.gmm


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   dasf.ml.mixture.gmm.GaussianMixture
   dasf.ml.mixture.gmm.GaussianMixtureOp
   dasf.ml.mixture.gmm.GaussianMixtureFitOp
   dasf.ml.mixture.gmm.GaussianMixtureFitPredictOp
   dasf.ml.mixture.gmm.GaussianMixturePredictOp




.. py:class:: GaussianMixture(n_components=1, *, covariance_type='full', tol=0.001, reg_covar=1e-06, max_iter=100, n_init=1, init_params='kmeans', weights_init=None, means_init=None, precisions_init=None, random_state=None, warm_start=False, verbose=0, verbose_interval=10)

   Bases: :py:obj:`dasf.ml.mixture.classifier.MixtureClassifier`

   .. py:method:: _fit_gpu(X, y=None)


   .. py:method:: _fit_predict_cpu(X, y=None)


   .. py:method:: _predict_cpu(X, y=None)


   .. py:method:: _set_params_cpu(**params)


   .. py:method:: _get_params_cpu(deep=True)



.. py:class:: GaussianMixtureOp(n_components=1, *, covariance_type='full', tol=0.001, reg_covar=1e-06, max_iter=100, n_init=1, init_params='kmeans', weights_init=None, means_init=None, precisions_init=None, random_state=None, warm_start=False, verbose=0, verbose_interval=10, checkpoint=False)

   Bases: :py:obj:`dasf.pipeline.ParameterOperator`

       

   .. py:method:: run()



.. py:class:: GaussianMixtureFitOp(checkpoint=False)

   Bases: :py:obj:`dasf.ml.core.FitInternal`

       

   .. py:method:: dump(model)


   .. py:method:: load(model)



.. py:class:: GaussianMixtureFitPredictOp(checkpoint=False)

   Bases: :py:obj:`dasf.ml.core.FitPredictInternal`

       

   .. py:method:: load(model)



.. py:class:: GaussianMixturePredictOp(checkpoint=False)

   Bases: :py:obj:`dasf.ml.core.PredictInternal`

       

   .. py:method:: load(model)



