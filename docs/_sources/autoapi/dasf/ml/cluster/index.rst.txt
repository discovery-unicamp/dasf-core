:py:mod:`dasf.ml.cluster`
=========================

.. py:module:: dasf.ml.cluster


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   agglomerative/index.rst
   classifier/index.rst
   dbscan/index.rst
   hdbscan/index.rst
   kmeans/index.rst
   som/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   dasf.ml.cluster.KMeans
   dasf.ml.cluster.HDBSCAN
   dasf.ml.cluster.DBSCAN
   dasf.ml.cluster.SOM




.. py:class:: KMeans(n_clusters, random_state=0, max_iter=300)

   Bases: :py:obj:`dasf.ml.cluster.classifier.ClusterClassifier`

   .. py:method:: _lazy_fit_cpu(X, y=None, sample_weight=None)


   .. py:method:: _lazy_fit_gpu(X, y=None, sample_weight=None)


   .. py:method:: _fit_cpu(X, y=None, sample_weight=None)


   .. py:method:: _fit_gpu(X, y=None, sample_weight=None)


   .. py:method:: _lazy_fit_predict_cpu(X, y=None, sample_weight=None)


   .. py:method:: _lazy_fit_predict_gpu(X, y=None, sample_weight=None)


   .. py:method:: _fit_predict_cpu(X, y=None, sample_weight=None)


   .. py:method:: _fit_predict_gpu(X, y=None, sample_weight=None)


   .. py:method:: _lazy_predict_cpu(X, sample_weight=None)


   .. py:method:: _lazy_predict_gpu(X, sample_weight=None)


   .. py:method:: _predict_cpu(X, sample_weight=None)


   .. py:method:: _predict_gpu(X, sample_weight=None)



.. py:class:: HDBSCAN(alpha=1.0, gen_min_span_tree=False, leaf_size=40, metric='euclidean', min_cluster_size=5, min_samples=None, p=None, **kwargs)

   Bases: :py:obj:`dasf.ml.cluster.classifier.ClusterClassifier`

   .. py:method:: _fit_cpu(X, y=None)


   .. py:method:: _fit_gpu(X, y=None, convert_dtype=True)


   .. py:method:: _fit_predict_cpu(X, y=None)


   .. py:method:: _fit_predict_gpu(X, y=None)



.. py:class:: DBSCAN(eps=0.5, leaf_size=40, metric='euclidean', min_samples=None, p=None)

   Bases: :py:obj:`dasf.ml.cluster.classifier.ClusterClassifier`

   .. py:method:: _lazy_fit_gpu(X, y=None, out_dtype='int32')


   .. py:method:: _fit_cpu(X, y=None, sample_weight=None)


   .. py:method:: _fit_gpu(X, y=None, out_dtype='int32')


   .. py:method:: _lazy_fit_predict_gpu(X, y=None, out_dtype='int32')


   .. py:method:: _fit_predict_cpu(X, y=None, sample_weight=None)


   .. py:method:: _fit_predict_gpu(X, y=None, out_dtype='int32')



.. py:class:: SOM(x, y, input_len, num_epochs=100, sigma=0, sigmaN=1, learning_rate=0.5, learning_rateN=0.01, decay_function='exponential', neighborhood_function='gaussian', std_coeff=0.5, topology='rectangular', activation_distance='euclidean', random_seed=None, n_parallel=0, compact_support=False)

   Bases: :py:obj:`dasf.ml.cluster.classifier.ClusterClassifier`

   .. py:method:: _lazy_fit_cpu(X, y=None, sample_weight=None)


   .. py:method:: _lazy_fit_gpu(X, y=None, sample_weight=None)


   .. py:method:: _fit_cpu(X, y=None, sample_weight=None)


   .. py:method:: _fit_gpu(X, y=None, sample_weight=None)


   .. py:method:: _lazy_fit_predict_cpu(X, y=None, sample_weight=None)


   .. py:method:: _lazy_fit_predict_gpu(X, y=None, sample_weight=None)


   .. py:method:: _fit_predict_cpu(X, y=None, sample_weight=None)


   .. py:method:: _fit_predict_gpu(X, y=None, sample_weight=None)


   .. py:method:: _lazy_predict_cpu(X, sample_weight=None)


   .. py:method:: _lazy_predict_gpu(X, sample_weight=None)


   .. py:method:: _predict_cpu(X, sample_weight=None)


   .. py:method:: _predict_gpu(X, sample_weight=None)


   .. py:method:: _lazy_quantization_error_cpu(X)


   .. py:method:: _lazy_quantization_error_gpu(X)


   .. py:method:: _quantization_error_cpu(X)


   .. py:method:: _quantization_error_gpu(X)


   .. py:method:: quantization_error(X)



