:py:mod:`dasf.pipeline.executors`
=================================

.. py:module:: dasf.pipeline.executors


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   base/index.rst
   dask/index.rst
   wrapper/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   dasf.pipeline.executors.Executor
   dasf.pipeline.executors.DaskPipelineExecutor
   dasf.pipeline.executors.DaskPBSPipelineExecutor
   dasf.pipeline.executors.DaskTasksPipelineExecutor




.. py:class:: Executor

   .. py:property:: ngpus
      :type: int


   .. py:property:: is_connected
      :type: bool


   .. py:method:: pre_run(pipeline)


   .. py:method:: post_run(pipeline)


   .. py:method:: execute(fn, *args, **kwargs)



.. py:class:: DaskPipelineExecutor(address=None, port=8786, local=False, use_gpu=False, profiler=None, cluster_kwargs=None, client_kwargs=None)

   Bases: :py:obj:`dasf.pipeline.executors.base.Executor`

   A pipeline engine based on dask data flow.

   Keyword arguments:
   address -- address of the Dask scheduler (default None).
   port -- port of the Dask scheduler (default 8786).
   local -- kicks off a new local Dask cluster (default False).
   use_gpu -- in conjunction with `local`, it kicks off a local CUDA Dask
               cluster (default False).
   profiler -- sets a Dask profiler.
   cluster_kwargs -- extra Dask parameters like memory, processes, etc.
   client_kwargs -- extra Client parameters.

   .. py:property:: ngpus


   .. py:property:: is_connected


   .. py:method:: execute(fn, *args, **kwargs)



.. py:class:: DaskPBSPipelineExecutor(**kwargs)

   Bases: :py:obj:`dasf.pipeline.executors.base.Executor`


.. py:class:: DaskTasksPipelineExecutor(address=None, port=8786, local=False, use_gpu=False, profiler=None, cluster_kwargs=None, client_kwargs=None)

   Bases: :py:obj:`DaskPipelineExecutor`

   A not centric execution engine based on dask.

   Keyword arguments:
   address -- address of the Dask scheduler (default None).
   port -- port of the Dask scheduler (default 8786).
   local -- kicks off a new local Dask cluster (default False).
   use_gpu -- in conjunction with `local`, it kicks off a local CUDA Dask
               cluster (default False).
   profiler -- sets a Dask profiler.
   cluster_kwargs -- extra Dask parameters like memory, processes, etc.
   client_kwargs -- extra Client parameters.

   .. py:method:: pre_run(pipeline)


   .. py:method:: post_run(pipeline)


   .. py:method:: execute(fn, *args, **kwargs)



