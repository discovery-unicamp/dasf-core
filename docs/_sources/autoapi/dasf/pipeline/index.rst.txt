dasf.pipeline
=============

.. py:module:: dasf.pipeline

.. autoapi-nested-parse::

   Init module for DASF Pipeline and its features. 



Subpackages
-----------

.. toctree::
   :maxdepth: 1

   /autoapi/dasf/pipeline/executors/index


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/dasf/pipeline/pipeline/index
   /autoapi/dasf/pipeline/types/index


Classes
-------

.. autoapisummary::

   dasf.pipeline.Pipeline
   dasf.pipeline.PipelinePlugin


Package Contents
----------------

.. py:class:: Pipeline(name, executor=None, verbose=False, callbacks = None)

   .. py:attribute:: _name


   .. py:attribute:: _executor


   .. py:attribute:: _verbose


   .. py:attribute:: _dag


   .. py:attribute:: _dag_table


   .. py:attribute:: _dag_g


   .. py:attribute:: _logger


   .. py:attribute:: _callbacks


   .. py:method:: register_plugin(plugin)


   .. py:method:: info()


   .. py:method:: execute_callbacks(func_name, *args, **kwargs)


   .. py:method:: __add_into_dag(obj, func_name, parameters=None, itself=None)


   .. py:method:: __inspect_element(obj)


   .. py:method:: add(obj, **kwargs)


   .. py:method:: visualize(filename=None)


   .. py:method:: __register_dataset(dataset)


   .. py:method:: __execute(func, params, name)


   .. py:method:: get_result_from(obj)


   .. py:method:: run()


.. py:class:: PipelinePlugin

   .. py:method:: on_pipeline_start(fn_keys)


   .. py:method:: on_pipeline_end()


   .. py:method:: on_task_start(func, params, name)


   .. py:method:: on_task_end(func, params, name, ret)


   .. py:method:: on_task_error(func, params, name, exception)


