dasf.feature_extraction.transform
=================================

.. py:module:: dasf.feature_extraction.transform


Classes
-------

.. autoapisummary::

   dasf.feature_extraction.transform.ConcatenateToArray
   dasf.feature_extraction.transform.SampleDataframe
   dasf.feature_extraction.transform.GetSubeCubeArray
   dasf.feature_extraction.transform.GetSubDataframe


Module Contents
---------------

.. py:class:: ConcatenateToArray(flatten = False)

   Bases: :py:obj:`dasf.transforms.base.Transform`


   Concatenate data from different Arrays into a single array.

   Parameters
   ----------
   flatten : bool
       If the arrays must be flatten prior concatenating. If `False`, the
       arrays must share the shape of last dimansions in order to be
       concatenated (the default is False).



   .. py:method:: __transform_generic(xp, **kwargs)


   .. py:method:: _transform_cpu(**kwargs)

      Respective immediate transform mocked function for local CPU(s).



   .. py:method:: _transform_gpu(**kwargs)

      Respective immediate transform mocked function for local GPU(s).



.. py:class:: SampleDataframe(percent)

   Return a subset with random samples of the original dataset.

   Parameters
   ----------
   percent : float
       Percentage of the samples to get from the dataset.



   .. py:method:: run(X)

      Returns a subset with random samples from the dataset `X`.

      Parameters
      ----------
      X : Any
          The dataset.

      Returns
      -------
      Any
          The sampled subset.




.. py:class:: GetSubeCubeArray(percent)

   Get a subcube with x% of samples from the original one.

   Parameters
   ----------
   percent : float
       Percentage of the samples to get from the cube.



   .. py:method:: transform(X)


.. py:class:: GetSubDataframe(percent)

   Get the first x% samples from the dataset.

   Parameters
   ----------
   percent : float
       Percentage of the samples to get from the dataframe.



   .. py:method:: transform(X)


