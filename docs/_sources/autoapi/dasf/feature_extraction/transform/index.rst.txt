:py:mod:`dasf.feature_extraction.transform`
===========================================

.. py:module:: dasf.feature_extraction.transform


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   dasf.feature_extraction.transform.Normalize
   dasf.feature_extraction.transform.ConcatenateToArray
   dasf.feature_extraction.transform.SampleDataframe
   dasf.feature_extraction.transform.GetSubeCubeArray
   dasf.feature_extraction.transform.SliceDataframe
   dasf.feature_extraction.transform.GetSubDataframe




.. py:class:: Normalize

   Bases: :py:obj:`dasf.pipeline.Operator`

   Normalize the data using standard scaler normalizator.

       

   .. py:method:: run(X)



.. py:class:: ConcatenateToArray(flatten = False)

   Bases: :py:obj:`dasf.pipeline.Operator`

   Concatenate data from different Arrays into a single array.

   Parameters
   ----------
   flatten : bool
       If the arrays must be flatten prior concatenating. If `False`, the
       arrays must share the shape of last dimansions in order to be
       concatenated (the default is False).


   .. py:method:: run(**kwargs)

      Concatenate arrays passed as keyworkded aguments. The key represent
      Array names and the values are the arrays.

      Parameters
      ----------
      **kwargs : type
          Dictionary with datasets.

      Returns
      -------
      Any
          A concatenated Array.




.. py:class:: SampleDataframe(percent)

   Bases: :py:obj:`dasf.pipeline.Operator`

   Return a subset with random samples of the original dataset.

   Parameters
   ----------
   percent : float
       Percentage of the samples to get from the dataset.


   .. py:method:: run(X)

      Returns a subset with random samples from the dataset `X`.

      Parameters
      ----------
      X : Any
          The dataset.

      Returns
      -------
      Any
          The sampled subset.




.. py:class:: GetSubeCubeArray(percent)

   Bases: :py:obj:`dasf.pipeline.Operator`

   Get a subcube with x% of samples from the original one.

   Parameters
   ----------
   percent : float
       Percentage of the samples to get from the cube.


   .. py:method:: run(data)

      Returns a subcube from the original one.

      Parameters
      ----------
      data : Any
          The cube.

      Returns
      -------
      Any
          A subcube from the original.




.. py:class:: SliceDataframe(iline_index)

   Bases: :py:obj:`dasf.pipeline.Operator`

   Get a slice of a cube. An inline slice is a section over the x-axis.

   Parameters
   ----------
   iline_index : int
       The index of the inline to get.


   .. py:method:: run(X, y)



.. py:class:: GetSubDataframe(percent)

   Bases: :py:obj:`dasf.pipeline.Operator`

   Get the first x% samples from the dataset.

   Parameters
   ----------
   percent : float
       Percentage of the samples to get from the dataframe.


   .. py:method:: run(data)

      Return x% samples of the dataset.

      Parameters
      ----------
      data : Any
          A dataframe type data.

      Returns
      -------
      Any
          A dataframe with only the x% samples.




