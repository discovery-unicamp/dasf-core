:py:mod:`dasf.feature_extraction.transform`
===========================================

.. py:module:: dasf.feature_extraction.transform


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   dasf.feature_extraction.transform.ConcatenateToArray
   dasf.feature_extraction.transform.SampleDataframe
   dasf.feature_extraction.transform.GetSubeCubeArray
   dasf.feature_extraction.transform.SliceDataframe
   dasf.feature_extraction.transform.GetSubDataframe




.. py:class:: ConcatenateToArray(flatten = False)

   Bases: :py:obj:`dasf.transforms.base.Transform`

   Concatenate data from different Arrays into a single array.

   Parameters
   ----------
   flatten : bool
       If the arrays must be flatten prior concatenating. If `False`, the
       arrays must share the shape of last dimansions in order to be
       concatenated (the default is False).


   .. py:method:: __transform_generic(xp, **kwargs)


   .. py:method:: _transform_cpu(**kwargs)


   .. py:method:: _transform_gpu(**kwargs)



.. py:class:: SampleDataframe(percent)

   Return a subset with random samples of the original dataset.

   Parameters
   ----------
   percent : float
       Percentage of the samples to get from the dataset.


   .. py:method:: run(X)

      Returns a subset with random samples from the dataset `X`.

      Parameters
      ----------
      X : Any
          The dataset.

      Returns
      -------
      Any
          The sampled subset.




.. py:class:: GetSubeCubeArray(percent)

   Get a subcube with x% of samples from the original one.

   Parameters
   ----------
   percent : float
       Percentage of the samples to get from the cube.


   .. py:method:: transform(X)



.. py:class:: SliceDataframe(iline_index)

   Bases: :py:obj:`dasf.transforms.base.Fit`

   Get a slice of a cube. An inline slice is a section over the x-axis.

   Parameters
   ----------
   iline_index : int
       The index of the inline to get.


   .. py:method:: fit(X, y)



.. py:class:: GetSubDataframe(percent)

   Get the first x% samples from the dataset.

   Parameters
   ----------
   percent : float
       Percentage of the samples to get from the dataframe.


   .. py:method:: transform(X)



